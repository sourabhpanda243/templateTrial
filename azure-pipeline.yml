trigger:
  branches:
    include:
      - master
    exclude:
      - azure-pipeline.yml

pool: 
  name: 'Default'
  demands:
  - agent.os -equals Linux

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '905fc28f-8f4e-4f00-bcad-78b7445665d1'
  imageRepository: 'sql-connection/sql-connection'
  containerRegistry: 'sgsin01acr01.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: 'latest'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
   
    - task: CmdLine@2
      inputs:
        script: |
          echo > Dockerfile
          
          cat > Dockerfile <<EOF
         
          FROM ubuntu:16.04

          # apt-get and system utilities
          RUN apt-get update && apt-get install -y \
              curl apt-utils apt-transport-https debconf-utils gcc build-essential g++-5\
              && rm -rf /var/lib/apt/lists/*

          # adding custom MS repository
          RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          RUN curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list

          # install SQL Server drivers
          RUN apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql unixodbc-dev

          # install SQL Server tools
          RUN apt-get update && ACCEPT_EULA=Y apt-get install -y mssql-tools
          RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          RUN /bin/bash -c "source ~/.bashrc"

          # python3.6
          RUN apt-get install -y software-properties-common
          RUN add-apt-repository -y ppa:jonathonf/python-3.6
          RUN apt-get update && apt-get install -y \
              python3.6 \
              python3.6-dev \
              python3-pip \
              python3-setuptools \
              python3-wheel \
              --no-install-recommends && \
              python3.6 -m pip install --upgrade pip && \
              rm -rf /var/lib/apt/lists/* && \
              alias python=python3.6

          # install necessary locales
          RUN apt-get update && apt-get install -y locales \
              && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
              && locale-gen

          # install SQL Server Python SQL Server connector module - pyodbc
          RUN python3.6 -m pip install pyodbc
          
          CMD ["python","-i","app.py"]
          EOF
    

    - task: CmdLine@2
      inputs:
        script: |
          mkdir manifests    
          
          echo > cronjob.yml
          
          cat > cronjob.yml <<EOF
          apiVersion: batch/v1beta1
          kind: CronJob
          metadata:
            name: sql-connection
          spec:
            schedule: "*/2 * * * *"
            jobTemplate:
              spec:
                template:
                  spec:
                    containers:
                    - name: sql-connection
                      image:  sgsin01acr01.azurecr.io/sql-connection/sql-connection:latest
                      imagePullPolicy: IfNotPresent
                    restartPolicy: OnFailure
          EOF

          

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)


    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'sqlConnection'
        publishLocation: 'pipeline'
        
    - task: CmdLine@2
      inputs:
        script: 'docker rmi -f $(docker images -a -q)'